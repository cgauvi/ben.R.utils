on:
  push:
    branches:
      [main, master]
  pull_request:
    branches:
      [master, main]


name: test-coverage

jobs:
  test-coverage:

    if:  !contains(github.ref_name, 'create-pull-request/patch') && github.actor != 'github-actions'

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: ubuntu-22.04, r: 'release', renv: '~/.local/share/renv'}

    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      R_RENV_CACHE_DIR: ${{ matrix.config.renv }}

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          cache-version: 2
          extra-packages: |
            any::ggplot2
            any::rcmdcheck
            any::sf
          needs: |
            website
            coverage

      - name: Query dependencies
        run: |
          if (!requireNamespace("remotes", quietly = TRUE)) install.packages("remotes")
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}


      - name: Cache R packages
        uses: actions/cache@v2
        with:
          path: |
            ${{ env.R_LIBS_USER }}
            ${{ env.R_RENV_CACHE_DIR }}
          key: ${{ matrix.config.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ matrix.config.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Pandoc setup
        uses: r-lib/actions/setup-pandoc@v2

      - name: Install dependencies
        run: |
          install.packages('renv')
          # CRAN packages
          remotes::install_deps(dependencies = TRUE)
        shell: Rscript {0}

      - name: Test coverage
        run: |
          install.packages(c('covr','htmltools','DT'))
          x <- covr::package_coverage(quiet = FALSE, verbose = TRUE)
          if (length(x)) {
            warning("Tests code coverage percentage is : ", covr::percent_coverage(x))
            covr::report(x, file = "covr-report.html")
          } else {
            writeLines("No functions", con = "covr-report.html")
          }
        shell: Rscript {0}

      - name: Upload check results
        uses: actions/upload-artifact@v2
        with:
          name: covr-report
          path: covr-report.html
